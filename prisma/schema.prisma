// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Door {
  id                 String  @id @default(cuid())
  name               String  // Название двери
  description        String? // Описание двери
  size               String  // Размер двери (свободный формат, например 860x2050)
  opening            Opening // Открывание: левое/правое
  color              String  // Цвет двери
  innerPanelColor    String  // Цвет внутренней панели
  count              Int  @default(0) // количество
  uplotnitel         String?
  zamki              String?
  protivosem         Boolean   @default(true)
  vneshPanel         String? // внешняя панель мдф, если есть
  clouseBox          Boolean  @default(false) // открытый короб
  porog              Boolean   @default(false) // нержавеющий парог
  inner              String?   // утеплитель внутри
  sizesDoor          String?   // размеры коробки и полотна

  @@map("Двери")
}

enum Opening {
  LEFT
  RIGHT
}

// межкомнатные двери
model BetweenDoor {
  id                String  @id @default(cuid())
  name              String
  factory           String? // завод.фабрика произвводитель
  is600             Int     @default(0)
  is700             Int     @default(0)
  is800             Int     @default(0)
  is900             Int     @default(0)
  analog            String? // аналоги на других заводах 
  colors            String? // доступные цвета
  innerFilling      String? // внутреннее наполнение
  comment           String?
  fotoUrl           String?
  materials         String? // материалы 
}

// доступные цвета
model Color {
  id                String  @id @default(cuid())
  name              String
  url               String?
}

// универсальные записи (название, описание, количество)
model Record {
  id          String   @id @default(cuid())
  title       String
  description String?
  quantity    Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("Records")
}